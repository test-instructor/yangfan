(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{475:function(t,s,r){"use strict";r.r(s);var a=r(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"设计理念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计理念"}},[t._v("#")]),t._v(" 设计理念")]),t._v(" "),s("p",[t._v("性能测试与测试用例有着许多共同之处，都依赖于精心设计的测试步骤，但性能测试又增加了集合点和事务的特性。为了增强性能测试的扩展性，我们会引用测试步骤，让这些步骤适应更复杂的性能任务。我们主要通过两种方式运行这些测试：调试和执行。在调试阶段，我们关注的是脚本是否能正常运行。而在执行阶段，我们更关注测试报告的生成。")]),t._v(" "),s("p",[t._v("对于测试报告的显示，我们采用了httprunner的方式，包括grafana、prometheus和pushgateway等工具，但我们还进一步优化了数据筛选功能。在测试报告详情中，你可以动态调整并发用户数，直观地看到并发数量对性能的影响。")]),t._v(" "),s("p",[t._v("我们对Kubernetes和Docker两种部署方式都进行了性能测试。在Kubernetes单节点部署下，请求处理速率（RPS）可以达到13k。而在Docker（配置为2C4U）单节点部署下，RPS可以达到4k。")]),t._v(" "),s("p",[t._v("我们知道，每个系统都有优化的空间。我们正在计划进行以下几项优化：")]),t._v(" "),s("ol",[s("li",[t._v("我们希望在一个性能测试中，每一个并发用户在开始执行任务前只执行一次登录操作，然后使用该登录的凭据（如令牌或会话ID）进行后续的所有请求。这种模式更接近真实世界中用户的行为，因为用户在开始使用应用程序之前通常只需要登录一次。")]),t._v(" "),s("li",[t._v("我们计划使用账号池，这样可以在多用户执行测试时确保数据不受干扰。")]),t._v(" "),s("li",[t._v("在Kubernetes部署下，我们计划可以动态调整压测机节点数量，以实现同时运行多个压测任务。任务执行完毕后，可以释放这些资源，避免资源浪费。")])]),t._v(" "),s("p",[t._v("总的来说，我们正在不断优化我们的测试策略和环境，以提高性能测试的精确性和效率。")]),t._v(" "),s("h2",{attrs:{id:"k8s-部署下单节点rps达到13k"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#k8s-部署下单节点rps达到13k"}},[t._v("#")]),t._v(" k8s 部署下单节点rps达到13k")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qiniu.yangfan.gd.cn/markdown/image-20230724083322579.png",alt:"image-20230724083322579"}})]),t._v(" "),s("h2",{attrs:{id:"docker下部署单节点rps达到4k-服务器配置-2c4g-部署完整的测试平台、mysql数据库、防火墙、httpdemo等服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker下部署单节点rps达到4k-服务器配置-2c4g-部署完整的测试平台、mysql数据库、防火墙、httpdemo等服务"}},[t._v("#")]),t._v(" docker下部署单节点rps达到4k（服务器配置：2C4G，部署完整的测试平台、mysql数据库、防火墙、httpdemo等服务）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://qiniu.yangfan.gd.cn/markdown/image-20230711163104716.png",alt:"性能测试报告详情"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);